---

promtail_version: "2.7.4"

promtail_service:
  log:
    level: debug

promtail_server:
  http:
    listen:
      address: "127.0.0.1"
      port: 9080

promtail_additional_groups:
  - www-data
  - adm

promtail_clients:
  - url: "http://127.0.0.1:3100/loki/api/v1/push"

promtail_scrape_configs:
  - job_name: nginx_access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          host: "{{ ansible_fqdn }}"
          log_level: nginx_access
          agent: promtail
          env: molecule
          __path__: /var/log/nginx/**access.log

    pipeline_stages:
      # anonymisier latest octet
      - replace:
          expression: '(?:[0-9]{1,3}\.){3}([0-9]{1,3})'
          replace: '***'

  - job_name: nginx_error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          host: "{{ ansible_fqdn }}"
          log_level: nginx_error
          agent: promtail
          env: molecule
          # to use multiples paths try this
          #
          # __path__: /var/log/**/{loki,promtail,grafana}.log
          # __path__: /var/log/nginx/**/error.log
          __path__: /var/log/nginx/**/error.log


    # REGEX examples
    # row   :  2022/09/01 06:57:47 [error] 6143#6143: *1 open() "/var/www/monitoring.molecule.lan/bin/bashdfdslfnkjdsafifdsa" failed (2: No such file or directory), client: 127.0.0.1, server: monitoring.molecule.lan, request: "GET /bin/bashdfdslfnkjdsafifdsa HTTP/1.1", host: "monitoring.molecule.lan"
    # row   :  2022/09/01 07:02:31 [error] 6143#6143: *4 directory index of "/var/www/monitoring.molecule.lan/" is forbidden, client: 127.0.0.1, server: monitoring.molecule.lan, request: "GET / HTTP/1.1", host: "monitoring.molecule.lan"
    # regex : '(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<severity>emerg|alert|crit|error|warn|notice|info)\] (?P<process_id>\d+)#(?P<thread_id>\d+): \*(?P<connection_id>\d+) (?P<error_message>.+?), client: (?P<client_ip>\d+\.\d+\.\d+\.\d+), server: (?P<server>.+?), request: \"(?P<request_method>GET|POST|HEAD|OPTION]?) (?P<request_path>.+?) (?P<request_protocol>.+?)\", host: \"(?P<host>.+?)\"'
    # row   :  2022/05/01 06:28:32 [notice] 7194#7194: *233269 "/favicon.ico" does not match "/en", client: 64.252.76.120, server: monitoring.molecule.lan, request: "GET /en HTTP/1.1", host: "monitoring.molecule.lan", referrer: "https://monitoring.molecule.lan"
    # regex : '(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<severity>emerg|alert|crit|error|warn|notice|info)\] (?P<process_id>\d+)#(?P<thread_id>\d+): \*(?P<connection_id>\d+) (?P<error_message>.+?), client: (?P<client_ip>\d+\.\d+\.\d+\.\d+), server: (?P<server>.+?), request: \"(?P<request_method>GET|POST|HEAD|OPTION]?) (?P<request_path>.+?) (?P<request_protocol>.+?)\", host: \"(?P<host>.+?)\"(, referrer: \"(?P<referer>.+?)\")?'
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<severity>emerg|alert|crit|error|warn|notice|info)\] (?P<process_id>\d+)#(?P<thread_id>\d+): \*(?P<connection_id>\d+) (?P<error_message>.+?), client: (?P<client_ip>\d+\.\d+\.\d+\.\d+), server: (?P<server>.+?), request: \"(?P<request_method>GET|POST|HEAD|OPTION]?) (?P<request_path>.+?) (?P<request_protocol>.+?)\", host: \"(?P<host>.+?)\"(, referrer: \"(?P<referer>.+?)\")?'
      - labels:
          timestamp:
          severity:
          process_id:
          thread_id:
          connection_id:
          error:
          context:
          client_ip:
          server:
          request_method:
          request_path:
          request_protocol:
          host:
          referrer:

...

# https://regex101.com/r/oPEqMk/1
#     ^(?P<timestamp>\d{4}/\d{2}/\d{2}\ \d{2}:\d{2}:\d{2})
#     \ \[(?P<severity>emerg|alert|crit|error|warn|notice|info)\]
#     \ (?P<process_id>\d+)
#     \#(?P<thread_id>\d+):
#     \ \*(?P<connection_id>\d+)
#     \ (?P<error>.+?)
#     (?:\ while\ (?P<context>.+?))?
#     ,\ client:\ (?P<client_ip>\d+\.\d+\.\d+\.\d+)
#     ,\ server:\ (?P<server>.+?)
#     (?:,\ request:\ \"(?P<request_method>[A-Z]+?)
#         \ (?P<request_path>\/.+?)
#         \ (?P<request_protocol>.+?)\")?
#     (?:,\ upstream:\ \"(?P<upstream>.+?)\")?
#     (?:,\ host:\ \"(?P<host>.+?)\")?
#     (?:,\ referrer:\ \"(?P<referrer>.+?)\")?
#     $
