---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- name: update package cache
  package:
    update_cache: true

- name: install dependency
  package:
    name: "{{ promtail_requirements }}"
    state: present

- name: detect installed promtail version
  shell: |
    promtail --version | head -n1 | cut -d ' ' -f3
  register: _promtail_version
  check_mode: false
  changed_when: false
  ignore_errors: true

- name: detect our installation path '{{ promtail_install_path | dirname }}'
  stat:
    path: "{{ promtail_install_path | dirname }}"
    get_checksum: false
  register: stat_promtail_path
  ignore_errors: true

- name: old installation
  block:
    - name: stop old service
      service:
        name: promtail
        state: stopped
        enabled: false

    - name: remove installed promtail
      file:
        state: absent
        path: "{{ stat_promtail_path.stat.path }}"
  when:
    - stat_promtail_path is defined
    - stat_promtail_path.stat is defined
    - stat_promtail_path.stat.islnk is defined
    - stat_promtail_path.stat.islnk

- name: detect installed promtail binary
  stat:
    path: "{{ promtail_install_path }}/promtail"
  register: stat_promtail_binary

- name: create local tmp directory
  become: false
  delegate_to: 127.0.0.1
  file:
    path: "{{ promtail_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: create promtail group
  group:
    name: "{{ promtail_system_group }}"
    state: present
    system: true
  when:
    - promtail_system_group != "root"

- name: create promtail user
  user:
    name: "{{ promtail_system_user }}"
    groups: "{{ promtail_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /nonexistent
  when:
    - promtail_system_user != "root"

- name: create install directory
  file:
    path: "{{ promtail_install_path }}"
    state: directory
    owner: "{{ promtail_system_user }}"
    group: "{{ promtail_system_group }}"
    mode: 0755

- name: fix directory rights for {{ promtail_install_path | dirname }}
  file:
    path: "{{ promtail_install_path | dirname }}"
    state: directory
    owner: "{{ promtail_system_user }}"
    group: "{{ promtail_system_group }}"
    mode: 0755
    recurse: true

- name: merge promtail server configuration between defaults and custom
  set_fact:
    promtail_server: "{{ promtail_defaults_server |
      combine( promtail_server, recursive=True ) }}"

- name: merge promtail clients configuration between defaults and custom
  set_fact:
    promtail_clients: "{{ promtail_defaults_clients |
      union( promtail_clients) }}"

- name: merge promtail positions configuration between defaults and custom
  set_fact:
    promtail_positions: "{{ promtail_defaults_positions |
      combine( promtail_positions, recursive=True ) }}"

- name: merge promtail target configuration between defaults and custom
  set_fact:
    promtail_targets: "{{ promtail_defaults_targets |
      combine( promtail_targets, recursive=True ) }}"

...
